{"ast":null,"code":"var _jsxFileName = \"/home/ronen/MyNewWork/udemy/complete_web_developer_ztm/smartbrain_project/github-branches/smart-brain-client/smart-brain-client/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js'; // import Clarifai from 'clarifai'; // moved to backend\n\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register'; //  Note : installed particles react js\n\nimport './App.css'; // taken to server:\n// const app = new Clarifai.App({\n//  apiKey: 'd05958c650c74c968cc62037f3f736e7'\n// });\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 300\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculate_face_location = data => {\n      console.log(data);\n      const clarfiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, width);\n      return {\n        leftCol: clarfiFace.left_col * width,\n        topRow: clarfiFace.top_row * height,\n        rightCol: width - clarfiFace.right_col * width,\n        bottomRow: height - clarfiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n      console.log(event.target);\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); // fetch('http://localhost:3000/imageUrl', \n\n      fetch('https://infinite-badlands-96374.herokuapp.com/imageUrl', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()) // equivalent to {return response.json()})\n      .then(response => {\n        console.log(response);\n\n        if (response) {\n          fetch('https://infinite-badlands-96374.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            console.log('count!!!!', count);\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n            console.log('count!!!!', this.state.user.entries);\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculate_face_location(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState); // note: initially was {isSignedIn: false} but initialState cleans leftovers (fixed in code revioew)\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })) : this.state.route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ronen/MyNewWork/udemy/complete_web_developer_ztm/smartbrain_project/github-branches/smart-brain-client/smart-brain-client/src/App.js"],"names":["React","Component","Particles","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","particleOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","password","entries","joined","App","constructor","loadUser","data","setState","calculate_face_location","console","log","clarfiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\n// import Clarifai from 'clarifai'; // moved to backend\n\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Signin from './components/Signin/Signin'\nimport Register from './components/Register/Register'\n\n\n\n//  Note : installed particles react js\n\nimport './App.css';\n\n// taken to server:\n// const app = new Clarifai.App({\n//  apiKey: 'd05958c650c74c968cc62037f3f736e7'\n// });\n\nconst particleOptions = {\n                particles: {\n                       number: {\n                    value: 30,\n                    density: {\n                      enable: true,\n                      value_area: 300\n\n                    }\n                  }\n                }\n}\n\n const initialState = {\n      input: '',\n      imageUrl: '',\n      box:  {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box:  {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n\n  }\n\n  loadUser = (data) => {\n    this.setState( {user: {\n         id: data.id,\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n\n  calculate_face_location = (data) => {\n    console.log(data)\n    const clarfiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputImage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n    console.log(width, width)\n    return {\n        leftCol: clarfiFace.left_col * width,\n        topRow: clarfiFace.top_row * height,\n        rightCol: width - (clarfiFace.right_col * width),\n        bottomRow: height -  (clarfiFace.bottom_row * height)\n\n\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState({box: box})\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value})\n    console.log(event.target)\n\n  }\n  onButtonSubmit = () =>{\n    this.setState({imageUrl: this.state.input})\n    // fetch('http://localhost:3000/imageUrl', \n    fetch('https://infinite-badlands-96374.herokuapp.com/imageUrl',\n    {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            input: this.state.input\n          })\n    })\n    .then(response =>      \n         response.json())// equivalent to {return response.json()})\n    .then(response => {\n        console.log(response)\n      if (response){\n        fetch('https://infinite-badlands-96374.herokuapp.com/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id,\n          })\n\n        })\n        .then(response => response.json())\n        .then(count => {\n          console.log('count!!!!', count)\n          this.setState(Object.assign(this.state.user, {entries: count}))\n          console.log('count!!!!', this.state.user.entries)\n\n\n        })\n        .catch(console.log)\n      }\n      this.displayFaceBox(this.calculate_face_location(response))\n    })\n    .catch(err => console.log(err))\n     \n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState(initialState) // note: initially was {isSignedIn: false} but initialState cleans leftovers (fixed in code revioew)\n    } else if (route === 'home'){\n        this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n\n  render(){\n    const {isSignedIn, imageUrl, route, box} = this.state\n    return (\n        <div className=\"App\">\n          <Particles className='particles'\n                  params={particleOptions}/>\n          <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n          { route === 'home' ?\n           <div>\n              <Logo/>\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n            : (\n             this.state.route === 'signin' \n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n\n\n            )\n\n          }\n        </div>\n      );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}